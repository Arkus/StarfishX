/*Copyright (c) 2001 M. Scott MarcyAll Rights ReservedThis program is free software; you can redistribute it and/ormodify it under the terms of the GNU General Public Licenseas published by the Free Software Foundation; either version 2of the License, or (at your option) any later version.This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See theGNU General Public License for more details.You should have received a copy of the GNU General Public Licensealong with this program; if not, write to the Free SoftwareFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.This file contains definitions and globals needed by the Altivec-codedportions of Starfish.*/#pragma once#if BUILD_ALTIVEC#ifndef USE_REPLACEMENT_TRIG_FUNCS#define USE_REPLACEMENT_TRIG_FUNCS	0		// Set to 1 to use the vCosf, vSinf & vATan2f in this file instead of the buggy one in OS 9#endif//#include "greymap.h"#if !USE_REPLACEMENT_TRIG_FUNCS#define vSqrtfX(x)		vsqrtf(x)		// OS X's vsqrtf() works fine for us#endif#define PIXELS_PER_CALL		(4)typedef union a {	vector unsigned int		vl;	vector signed int		vsl;	vector unsigned short	vw;	vector signed short		vsw;	vector unsigned char	vb;	vector signed char		vsb;	vector float			vf;	unsigned long			l[4];	long					sl[4];	unsigned short			w[8];	short					sw[8];	unsigned char			b[16];	char					sb[16];	float					f[4];} vector_accessor;// Globals ///////////////extern const vector signed int		gZero;extern const vector signed int		gZeroOneTwoThree;extern const vector signed int		gOne;extern const vector unsigned int	gTwo;extern const vector unsigned int	gEight;extern const vector float			gZeroF;extern const vector float			gOneFourth;extern const vector float			gOneHalf;extern const vector float			gOneThird;extern const vector float			gOneF;extern const vector float			gTwoF;extern const vector float			gThreeF;extern const vector float			gHalfPi;extern const vector float			gHalfPiRecip;extern const vector float			gPi;extern const vector float			gTwoPi;extern const vector float			gMinusOneF;extern const vector float			gMinusTwoF;extern const vector float			gMinusPi;extern const vector signed int		gMinChanVal;extern const vector signed int		gMaxChanVal;extern const vector float			gMaxChanValF;extern const vector signed int		gChannelRange;extern const vector float			gNormalizer;extern const vector float			gNaN;extern const vector unsigned char	gExtractAlphaAndRed;extern const vector unsigned char	gExtractGreen;extern const vector unsigned char	gExtractBlue;#if TEST_ALTIVEC_GENERATORSextern unsigned int					gNumPixelsGenerated;extern unsigned int					gNumAltivecPixelsOOB;#endif// Function Prototypes ///////////////////////////#ifdef __cplusplusextern "C" {#endifvector signed int	vSplati(int value);vector float		vSplatf(float value);vector unsigned int vSplatSelector(Boolean sel);vector float		vCosf(VECTOR float fT);vector float		vSinf(VECTOR float fT);vector float		vFModf(VECTOR float x, VECTOR float y);vector float		vSqrtfX(VECTOR float x);#ifdef __cplusplus}#endif#endif	// BUILD_ALTIVEC